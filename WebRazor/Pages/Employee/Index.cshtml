@page
@model EmployeeIndexModel
@{
    ViewData["Title"] = "Employee Management";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<style>
    .employee-table { background: #fff; border-radius: 1.2rem; box-shadow: 0 4px 24px rgba(24,28,47,0.08); overflow: hidden; }
    .employee-table th, .employee-table td { vertical-align: middle; text-align: center; }
    .badge-active { background: #d1fae5; color: #065f46; font-weight: 600; }
    .badge-banned { background: #fee2e2; color: #991b1b; font-weight: 600; }
    .search-box { max-width: 320px; }
    .pagination { justify-content: center; }
    .toast { position: fixed; top: 1.5rem; right: 1.5rem; z-index: 9999; }
</style>
<div class="container py-4">
    <h2 class="fw-bold mb-4"><i class="bi bi-people me-2"></i>Employee Management</h2>
    <div class="d-flex mb-3 gap-2 align-items-center">
        <input type="text" id="searchBox" class="form-control search-box" placeholder="Search by name or email..." autocomplete="off" />
    </div>
    <div id="employeeTableContainer">
        <!-- Bảng employee sẽ render ở đây -->
    </div>
</div>
<!-- Toast notification -->
<div class="toast align-items-center text-bg-success border-0" id="toastSuccess" role="alert" aria-live="assertive" aria-atomic="true" style="display:none;">
  <div class="d-flex">
    <div class="toast-body" id="toastMsg">Action successful!</div>
    <button type="button" class="btn-close btn-close-white me-2 m-auto" onclick="hideToast()"></button>
  </div>
</div>
<!-- Modal detail -->
<div class="modal fade" id="employeeDetailModal" tabindex="-1" aria-labelledby="employeeDetailModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="employeeDetailModalLabel">Employee Detail</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="employeeDetailBody">
      </div>
    </div>
  </div>
</div>
@section Scripts {
<script>
let searchTimeout = null;
let currentPage = 1;
const pageSize = 10;

function fetchEmployees(keyword, page) {
    const apiBaseUrl = "https://localhost:7118";
    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken') || getCookie('AccessToken');
    console.log('Token used for OData:', token);
    if (!token) {
        document.getElementById('employeeTableContainer').innerHTML = '<div class="alert alert-danger">You are not logged in. Please login as Admin.</div>';
        return;
    }
            fetch(`${apiBaseUrl}/api/Employee?$filter=contains(tolower(FullName),'${keyword.toLowerCase()}') or contains(tolower(Email),'${keyword.toLowerCase()}')&$top=${pageSize}&$skip=${(page - 1) * pageSize}&$count=true`, {
        headers: { 'Authorization': 'Bearer ' + token }
    })
    .then(res => {
        if (res.status === 401) {
            document.getElementById('employeeTableContainer').innerHTML = '<div class="alert alert-danger">You are not authorized. Please login as Admin.</div>';
            return { value: [], '@@odata.count': 0 };
        }
        return res.json();
    })
        .then(data => {
            const employees = Array.isArray(data) ? data : []; // Đảm bảo luôn là mảng
            renderEmployeeTable(employees, employees.length, page, pageSize, keyword);
        });
}

document.getElementById('searchBox').addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
        currentPage = 1;
        fetchEmployees(this.value, currentPage);
    }, 300);
});

function renderEmployeeTable(employees, total, page, pageSize, keyword) {
    let html = `<table class="table employee-table"><thead><tr><th>#</th><th>Full Name</th><th>Email</th><th>Status</th><th>Actions</th></tr></thead><tbody>`;
    if (employees.length === 0) {
        html += `<tr><td colspan="5" class="text-center text-secondary">No employees found.</td></tr>`;
    } else {
        let index = (page - 1) * pageSize;
        for (const emp of employees) {
            html += `<tr>
                <td>${++index}</td>
                <td>${emp.fullName}</td>
                <td>${emp.email}</td>
                <td>${emp.isBanned ? '<span class="badge badge-banned">Banned</span>' : '<span class="badge badge-active">Active</span>'}</td>
                <td>`;
            if (!emp.isBanned) {
                html += `<button class="btn btn-outline-danger btn-sm" onclick="banEmployee(${emp.id}, '${keyword}', ${page})"><i class="bi bi-person-x"></i> Ban</button>`;
            } else {
                html += `<button class="btn btn-outline-success btn-sm" onclick="unbanEmployee(${emp.id}, '${keyword}', ${page})"><i class="bi bi-person-check"></i> Unban</button>`;
            }
            html += `<a href="#" class="btn btn-outline-info btn-sm ms-1" onclick="showDetail(${emp.id}, '${emp.fullName}', '${emp.email}', '${emp.isBanned ? 'Banned' : 'Active'}')"><i class="bi bi-info-circle"></i> Detail</a></td></tr>`;
        }
    }
    html += `</tbody></table>`;
    const totalPages = Math.ceil(total / pageSize);
    html += `<nav aria-label="Employee pagination"><ul class="pagination">`;
    for (let i = 1; i <= totalPages; i++) {
        html += `<li class="page-item${i === page ? ' active' : ''}"><a class="page-link" href="#" onclick="gotoPage(${i}, '${keyword}');return false;">${i}</a></li>`;
    }
    html += `</ul></nav>`;
    document.getElementById('employeeTableContainer').innerHTML = html;
}


function gotoPage(page, keyword) {
    currentPage = page;
    fetchEmployees(keyword, page);
}

function banEmployee(id, keyword, page) {
    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken') || getCookie('AccessToken');
    fetch(`https://localhost:7117/api/Employee/ban/${id}`, {
        method: 'PUT',
        headers: {
            'Authorization': 'Bearer ' + token
        }
    })
    .then(res => {
        if (res.ok) showToast('Ban successful!');
        fetchEmployees(keyword, page);
    });
}

function unbanEmployee(id, keyword, page) {
    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken') || getCookie('AccessToken');
    fetch(`https://localhost:7117/api/Employee/unban/${id}`, {
        method: 'PUT',
        headers: {
            'Authorization': 'Bearer ' + token
        }
    })
    .then(res => {
        if (res.ok) showToast('Unban successful!');
        fetchEmployees(keyword, page);
    });
}

function showToast(msg) {
    document.getElementById('toastMsg').innerText = msg;
    var toast = document.getElementById('toastSuccess');
    toast.style.display = 'block';
    setTimeout(() => { toast.style.display = 'none'; }, 2500);
}
function hideToast() {
    document.getElementById('toastSuccess').style.display = 'none';
}
function showDetail(id, name, email, status) {
    let html = `
        <div><b>ID:</b> ${id}</div>
        <div><b>Full Name:</b> ${name}</div>
        <div><b>Email:</b> ${email}</div>
        <div><b>Status:</b> ${status}</div>`;
    document.getElementById('employeeDetailBody').innerHTML = html;
    var modal = new bootstrap.Modal(document.getElementById('employeeDetailModal'));
    modal.show();
}

function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
}
// Initial load
fetchEmployees('', 1);
</script>
} 