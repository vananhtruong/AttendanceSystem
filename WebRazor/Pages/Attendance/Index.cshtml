@page
@model AttendanceIndexModel
@{
    ViewData["Title"] = "Attendance & History";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<style>
    .attendance-card {
        border-radius: 1.2rem;
        box-shadow: 0 4px 16px rgba(0,0,0,0.07);
        transition: box-shadow 0.2s;
    }
    .attendance-card:hover {
        box-shadow: 0 8px 32px rgba(0,0,0,0.12);
    }
    .badge-status {
        font-size: 1rem;
        border-radius: 1rem;
        padding: 0.4em 1.2em;
    }
    .badge-ontime { background: #d1fae5; color: #065f46; }
    .badge-late { background: #fef9c3; color: #92400e; }
    .badge-absent { background: #fee2e2; color: #991b1b; }
    .badge-pending { background: #e0e7ef; color: #3730a3; }
</style>
<div class="container py-4">
    <h2 class="fw-bold mb-4"><i class="bi bi-clipboard-check me-2"></i>Attendance & History</h2>
    <div class="mb-4">
        <form method="post" enctype="multipart/form-data" class="row g-3 align-items-center bg-white p-3 rounded-4 shadow-sm">
            <div class="col-auto">
                <label class="form-label mb-0">Select face image (mock):</label>
            </div>
            <div class="col-auto">
                <input type="file" name="FaceImage" class="form-control" accept="image/*" required />
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-main btn-lg"><i class="bi bi-camera me-1"></i> Check In</button>
            </div>
        </form>
    </div>
    <div class="row g-4">
        @foreach (var item in Model.AttendanceRecords)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card attendance-card p-3">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="fw-bold text-primary">@item.Date.ToString("dddd, dd MMM yyyy")</span>
                        <span class="badge badge-status
                            @(item.Status == "OnTime" ? "badge-ontime" :
                              item.Status == "Late" ? "badge-late" :
                              item.Status == "Absent" ? "badge-absent" : "badge-pending")">
                            @item.Status
                        </span>
                    </div>
                    <div>
                        <i class="bi bi-clock me-1"></i>
                        <span>Check-in: @item.CheckInTime.ToString("HH:mm")</span> |
                        <span>Check-out: @item.CheckOutTime?.ToString("HH:mm") ?? "--"</span>
                    </div>
                    <div class="mt-2">
                        <span class="badge bg-light text-dark">Hours worked: @item.HoursWorked</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div> 